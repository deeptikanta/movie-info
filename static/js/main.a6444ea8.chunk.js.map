{"version":3,"sources":["conatiners/dashboard/dashboard.style.js","conatiners/dashboard/dashBoard.js","conatiners/dashboard/dashboard.action.js","conatiners/movieDetails/movieDetails.style.js","conatiners/movieDetails/movieDetails.js","conatiners/movieDetails/movieDetails.action.js","conatiners/home/home.style.js","conatiners/home/home.js","App.js","conatiners/dashboard/dashboard.reducer.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["styles","root","maxWidth","paddingForCard","padding","typography","color","media","height","paddingTop","cursor","avatar","backgroundColor","search","position","borderRadius","border","marginLeft","width","searchIcon","pointerEvents","display","alignItems","justifyContent","inputInput","inputRoot","DashBoard","props","state","searchedMovieName","page","redirect","searchForMovie","bind","handleScroll","this","movieList","apiKey","windowHeight","window","innerHeight","document","documentElement","offsetHeight","body","html","docHeight","Math","max","scrollHeight","clientHeight","pageYOffset","totalResults","fetchMovieListNextCycle","setState","addEventListener","removeEventListener","event","target","value","trim","fetchMovieList","movie","selectedMovie","classes","allMovies","notificationMsg","to","imdbID","Grid","container","justify","item","xs","sm","md","className","InputBase","id","onBlur","changeInput","placeholder","input","inputProps","Button","variant","onClick","Typography","component","length","map","index","key","Card","movieDetails","CardHeader","title","Title","subheader","Year","CardMedia","image","Poster","React","Component","connect","DashBoardReducer","movieName","dispatch","fetch","then","response","json","Response","payload","type","catch","error","withStyles","expand","transform","expandOpen","MovieDetails","reDirect","handleExpandClick","params","match","fetchMovieDetail","unMountMovieList","expanded","searchedMovie","Object","keys","CardContent","paragraph","Actors","Director","Production","Genre","imdbRating","Plot","IMDB_ID","accountLink","appBar","content","flexGrow","marginTop","minHeight","boxSizing","contentOpen","drawerPaper","maxHeight","overflowX","overflowY","whiteSpace","zIndex","drawerPaperClose","footerContainer","left","right","bottom","hide","loaderLine","top","menuButton","marginRight","portalName","fontSize","space","toolbar","HomePage","open","mainClassCss","classNames","contentClose","style","exact","path","withWidth","App","Home","INITIAL_STATE","action","Search","slice","combineReducers","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","store","createStore","connectRouter","rootReducer","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.a6444ea8.chunk.js","sourcesContent":["const styles = () => {\r\n    return {\r\n        root: {\r\n            maxWidth: 345,\r\n        },\r\n        paddingForCard: {\r\n            padding: '22px'\r\n        },\r\n        typography: {\r\n            color: '#fff'\r\n        },\r\n        media: {\r\n            height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n            cursor:'pointer'\r\n        },\r\n        avatar: {\r\n            backgroundColor: 'red',\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: '2px',\r\n            backgroundColor: '#0000008f',\r\n            border: '2px solid #0080006b',\r\n            '&:hover': {\r\n                backgroundColor: '#000000',\r\n                cursor: 'pointer',\r\n                border: '2px solid #0080008f'\r\n            },\r\n            marginLeft: 0,\r\n            width: '100%',\r\n\r\n        },\r\n        searchIcon: {\r\n            padding: '1px',\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputInput: {\r\n            // vertical padding + font size from searchIcon\r\n            width: '100%',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n        },\r\n    }\r\n};\r\nexport default styles;\r\n","/* eslint-disable no-unused-expressions */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { fetchMovieList, fetchMovieListNextCycle } from './dashboard.action';\r\nimport { Button, Grid, withStyles } from '@material-ui/core';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styles from './dashboard.style';\r\n\r\nclass DashBoard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchedMovieName: '',\r\n            page: 1,\r\n            redirect: false\r\n        }\r\n        this.searchForMovie = this.searchForMovie.bind(this);\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n    };\r\n    handleScroll() {\r\n        const { movieList, apiKey } = this.props;\r\n        const { searchedMovieName, page } = this.state;\r\n        const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight;\r\n        const body = document.body;\r\n        const html = document.documentElement;\r\n        const docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\r\n        const windowBottom = windowHeight + window.pageYOffset;\r\n        if (windowBottom >= docHeight - 1 && movieList.totalResults > page * 10) {\r\n            this.props.fetchMovieListNextCycle(apiKey, searchedMovieName, page + 1);\r\n            this.setState({ page: page + 1 })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.handleScroll);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"scroll\", this.handleScroll);\r\n    }\r\n    changeInput(event) {\r\n        this.setState({ searchedMovieName: event.target.value.trim() });\r\n    }\r\n    searchForMovie() {\r\n        const { apiKey } = this.props;\r\n        const { searchedMovieName } = this.state;\r\n        if (searchedMovieName) {\r\n            this.props.fetchMovieList(apiKey, searchedMovieName);\r\n        }\r\n    }\r\n\r\n    movieDetails(movie) {\r\n        this.setState({ redirect: true, selectedMovie: movie });\r\n        // this.props.history.push(`/movieDetails/${movie.imdbID}`)\r\n    }\r\n    render() {\r\n        const { redirect, selectedMovie } = this.state;\r\n        const { classes, allMovies, notificationMsg } = this.props;\r\n        if (redirect && selectedMovie) {\r\n            return (<Redirect to={`/movieDetails/${selectedMovie.imdbID}`} />)\r\n        }\r\n        return (\r\n            <Grid container justify={'center'} >\r\n                <Grid item xs={12}>\r\n                    <Grid container justify={'center'}>\r\n                        <Grid item xs={11} sm={8} md={6}>\r\n                            <div className={classes.search}>\r\n                                <div className={classes.searchIcon}>\r\n                                    &nbsp;\r\n                                    <SearchIcon />\r\n                                </div>\r\n                                <InputBase\r\n                                    id=\"search-input\"\r\n                                    onBlur={this.changeInput.bind(this)}\r\n                                    placeholder=\"Search for Movie Name\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }}\r\n                                    inputProps={{ 'aria-label': 'search' }}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={10} sm={3} md={2}>\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.searchForMovie}>\r\n                                Search\r\n      </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    {notificationMsg && <Grid item xs={11} sm={8} md={10}><Typography variant=\"body2\" component=\"p\" className={classes.typography} >{notificationMsg}</Typography></Grid>}\r\n\r\n                    <Grid container >\r\n                        {allMovies.length > 0 && allMovies.map((movie, index) => {\r\n                            return (<Grid item xs={11} sm={6} md={4} className={classes.paddingForCard} key={index}>\r\n                                <Card className={classes.root} onClick={this.movieDetails.bind(this, movie)}>\r\n                                    <CardHeader\r\n                                        title={movie.Title}\r\n                                        subheader={movie.Year}\r\n                                    />\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        image={movie.Poster}\r\n                                        title={movie.Title}\r\n                                    />\r\n\r\n\r\n                                </Card>\r\n                            </Grid>\r\n                            )\r\n                        })}\r\n\r\n                    </Grid>\r\n                </Grid>\r\n                <div className=\"scrollDiv\"></div>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n    DashBoardReducer\r\n}) => ({\r\n    apiKey: DashBoardReducer.apiKey,\r\n    allMovies: DashBoardReducer.allMovies,\r\n    movieList: DashBoardReducer.movieList,\r\n    notificationMsg: DashBoardReducer.notificationMsg,\r\n});\r\nexport default connect(mapStateToProps, { fetchMovieList, fetchMovieListNextCycle })(withStyles(styles)(DashBoard));","\r\nexport const fetchMovieList = (apiKey, movieName) => (dispatch) => {\r\n      return fetch(`http://www.omdbapi.com/?apikey=${apiKey}&s=${movieName}&type=movie`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                  if (json.Response === 'False') {\r\n                        dispatch({ payload: 'Record Not Found', type: 'MOVIE_RECORD_MISSING' })\r\n                  }\r\n                  else {\r\n                        dispatch({ payload: json, type: 'FETCH_MOVIE_LIST' })\r\n                  }\r\n            }\r\n            )\r\n            .catch(error => dispatch({ payload: 'oops ,Somthing went wrong,Please try agin later', type: 'NETWORK_ERROR' }));\r\n}\r\n\r\nexport const fetchMovieListNextCycle = (apiKey, movieName, page) => (dispatch) => {\r\n      return fetch(`https://www.omdbapi.com/?apikey=${apiKey}&s=${movieName}&page=${page}`)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                  if (json.Response === 'False') {\r\n                        dispatch({ payload: 'Record Not Found', type: 'MOVIE_RECORD_MISSING' })\r\n                  }\r\n                  else {\r\n                        dispatch({ payload: json, type: 'FETCH_MOVIE_LIST_MORE' })\r\n                  }\r\n            }\r\n            )\r\n            .catch(error => dispatch({ payload: 'oops ,Somthing went wrong,Please try agin later', type: 'NETWORK_ERROR' }));\r\n}","const styles = () => {\r\n    return {\r\n          media: {\r\n            height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n          },\r\n          expand: {\r\n            transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n          },\r\n          expandOpen: {\r\n            transform: 'rotate(180deg)',\r\n          },\r\n         \r\n    }\r\n};\r\nexport default styles;\r\n","/* eslint-disable no-unused-expressions */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button, Grid, withStyles } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { fetchMovieDetail, unMountMovieList } from './movieDetails.action';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport styles from './movieDetails.style';\r\nclass MovieDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reDirect: false\r\n        }\r\n        this.handleExpandClick = this.handleExpandClick.bind(this);\r\n    };\r\n    componentDidMount() {\r\n        const { apiKey, match } = this.props;\r\n        const { params } = match;\r\n        if (params.id) {\r\n            this.props.fetchMovieDetail(apiKey, params.id);\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.unMountMovieList();\r\n    }\r\n    handleExpandClick() {\r\n        this.setState({ expanded: true });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { searchedMovie, classes } = this.props;\r\n        const { reDirect } = this.state;\r\n        if (reDirect) {\r\n            return (<Redirect to={'/'} />);\r\n        }\r\n        return (\r\n            <Grid container justify={'center'} >\r\n                <Grid item xs={11} sm={9} md={6} >\r\n                    {Object.keys(searchedMovie).length > 0 ?\r\n                        <Card >\r\n                            <CardHeader\r\n\r\n                                title={searchedMovie.Title}\r\n                                subheader={searchedMovie.Year}\r\n                            />\r\n                            <CardMedia\r\n                                className={classes.media}\r\n                                image={searchedMovie.Poster}\r\n                                title={searchedMovie.Title}\r\n                            />\r\n                            <CardContent>\r\n                                <Grid container >\r\n                                    <Grid item xs={12}>\r\n                                        <b> Actors :</b><Typography paragraph>{searchedMovie.Actors}</Typography>\r\n                                        <b>Director :</b><Typography paragraph>{searchedMovie.Director}</Typography>\r\n                                        <b>Production :</b><Typography paragraph>{searchedMovie.Production}</Typography>\r\n                                        <b>Genre :</b><Typography paragraph>{searchedMovie.Genre}</Typography>\r\n                                        <b>imdbRating:</b><Typography paragraph>{searchedMovie.imdbRating}</Typography>\r\n\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                            {searchedMovie.Plot}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card> : <Typography paragraph>\r\n                            Record not Found\r\n                            </Typography>}\r\n                    <br />\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => { this.setState({ reDirect: true }) }}>\r\n                        Back\r\n      </Button>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = ({\r\n    DashBoardReducer\r\n}) => ({\r\n    apiKey: DashBoardReducer.apiKey,\r\n    searchedMovie: DashBoardReducer.searchedMovie\r\n});\r\nexport default connect(mapStateToProps, { fetchMovieDetail, unMountMovieList })(withStyles(styles)(MovieDetails));","export const fetchMovieDetail = (apiKey, IMDB_ID) => (dispatch) => {\r\n\r\n    return fetch(`http://www.omdbapi.com/?apikey=${apiKey}&i=${IMDB_ID}`)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            if (json.Response === 'False') {\r\n                dispatch({ payload: 'Record Not Found', type: 'MOVIE_RECORD_MISSING' })\r\n            }\r\n            else {\r\n                dispatch({ payload: json, type: 'FETCH_SEARCHED_MOVIE_DETAILS' })\r\n            }\r\n        }\r\n        )\r\n        .catch(error => dispatch({ payload: 'oops ,Somthing went wrong,Please try agin later', type: 'NETWORK_ERROR' }));\r\n}\r\nexport const unMountMovieList = () => (dispatch) => {\r\n    dispatch({\r\n        type: 'UN_MOUNT_MOVIE_LIST'\r\n    })\r\n}","const styles = () => {\r\n  return {\r\n    accountLink: {\r\n      '&:hover': {\r\n        color: '#0086d1'\r\n      },\r\n      color: '#0066c0',\r\n      cursor: 'pointer'\r\n    },\r\n    appBar: {\r\n      position: 'fixed',\r\n      width: '100%'\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      marginTop: '12px',\r\n\r\n\r\n      padding: '3px',\r\n\r\n      width: 'calc(100% - 72px)',\r\n      position: 'relative',\r\n      minHeight: 'calc(100vh - 115px - 12px)',\r\n      boxSizing: 'border-box',\r\n    },\r\n\r\n    contentOpen: {\r\n      width: '100%',\r\n      marginTop: '11px'\r\n    },\r\n    drawerPaper: {\r\n      '& .MuiListItemIcon-root-68': {\r\n        color: 'white'\r\n      },\r\n      '& span': {\r\n        color: 'white'\r\n      },\r\n      backgroundColor: '#1f5a9e !important',\r\n      color: 'white',\r\n      marginTop: '57px',\r\n      maxHeight: '92vh',\r\n      overflowX: 'hidden',\r\n      overflowY: 'auto',\r\n      position: 'fixed',\r\n\r\n      whiteSpace: 'nowrap',\r\n      width: 225,\r\n      zIndex: '1'\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n      width: '46px'\r\n    },\r\n    footerContainer: {\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      bottom: '-115px',\r\n      zIndex: -1,\r\n    },\r\n    hide: {\r\n      display: 'none'\r\n    },\r\n\r\n  \r\n    loaderLine: {\r\n      flexGrow: 1,\r\n      position: 'fixed',\r\n      top: '60px',\r\n      width: '100%',\r\n      zIndex: 4\r\n    },\r\n    menuButton: {\r\n      marginLeft: 12,\r\n      marginRight: 36\r\n    },\r\n    portalName: {\r\n      left: '100px'\r\n    },\r\n    root: {\r\n      color: 'grey',\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n      fontSize: '13px',\r\n      position: 'relative',\r\n      zIndex: 1\r\n    },\r\n    space: {\r\n      marginTop: '25px'\r\n    },\r\n    toolbar: {\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n    }\r\n  };\r\n};\r\nexport default styles;\r\n","import {\r\n  Route,\r\n} from 'react-router-dom';\r\nimport { withStyles, withWidth } from '@material-ui/core';\r\nimport classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport DashBoard from '../dashboard/dashBoard';\r\nimport MovieDetails from '../movieDetails/movieDetails';\r\nimport styles from './home.style';\r\n\r\n\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: true\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const mainClassCss = classNames(\r\n      classes.content,\r\n      this.state.open ? classes.contentOpen : classes.contentClose,\r\n    );\r\n    return (\r\n      <div style={{\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        // height: '97vh',\r\n        width: '100%',\r\n        position: 'relative',\r\n        zIndex: 1\r\n      }}>\r\n        <main className={mainClassCss}>\r\n          <div className={classes.toolbar} />\r\n          <div style={{ marginTop: '60px' }}>\r\n            {/* <Switch> */}\r\n              <Route exact path=\"/\" component={DashBoard} key=\"AppHome\" />\r\n              <Route exact path={`/movieDetails/:id`} component={MovieDetails} key=\"AppHome\" />\r\n            {/* </Switch> */}\r\n          </div>\r\n        </main>\r\n      </div >\r\n    );\r\n  }\r\n\r\n}\r\nexport default ((withWidth()(withStyles(styles)(HomePage))));\r\n// export default withRouter((withWidth()(withStyles(styles)(HomePage))));\r\n","import React from 'react';\nimport {\n  HashRouter, Switch, Route,\n} from 'react-router-dom';\nimport './App.css';\nimport Home from './conatiners/home/home';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <HashRouter>\n          <Switch>\n            <Route exact={false} path=\"/\" component={Home} key=\"AppLogin\" />\n          </Switch>\n        </HashRouter>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE = {\r\n    allMovies: [],\r\n    movieList: {},\r\n    apiKey: 'b9bd48a6',\r\n    notificationMsg: '',\r\n    searchedMovie: {}\r\n};\r\nconst DashBoardReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_MOVIE_LIST': return { ...state, movieList: action.payload, notificationMsg: '', allMovies: action.payload.Search }\r\n        case 'MOVIE_RECORD_MISSING': return { ...state, notificationMsg: action.payload }\r\n        case 'NETWORK_ERROR': return { ...state, notificationMsg: action.payload }\r\n        case 'FETCH_MOVIE_LIST_MORE': return { ...state, movieList: action.payload, allMovies: [...state.allMovies.slice(0, state.allMovies.length - 1), ...action.payload.Search, ...state.allMovies.slice(0)] }\r\n        case 'FETCH_SEARCHED_MOVIE_DETAILS': return { ...state, searchedMovie: action.payload }\r\n        case 'UN_MOUNT_MOVIE_LIST': return INITIAL_STATE \r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default DashBoardReducer;","import { combineReducers } from \"redux\";\r\nimport DashBoardReducer from '../conatiners/dashboard/dashboard.reducer';\r\n\r\nexport default combineReducers({ DashBoardReducer });\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\r\nimport thunk from 'redux-thunk'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport rootReducer from '../src/reducers';\r\nimport ReduxLogger from 'redux-logger';\r\n\r\nexport const history = createHistory()\r\n\r\nconst initialState = {}\r\nconst enhancers = []\r\nconst middleware = [\r\n  thunk,\r\n  routerMiddleware(history)\r\n]\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\r\n\r\n  if (typeof devToolsExtension === 'function') {\r\n    enhancers.push(devToolsExtension());\r\n    enhancers.push(ReduxLogger);\r\n  }\r\n}\r\n\r\nconst composedEnhancers = compose(\r\n  applyMiddleware(...middleware),\r\n  ...enhancers\r\n)\r\n\r\nconst store = createStore(\r\n  connectRouter(history)(rootReducer),\r\n  initialState,\r\n  composedEnhancers\r\n)\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store'\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n   <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}